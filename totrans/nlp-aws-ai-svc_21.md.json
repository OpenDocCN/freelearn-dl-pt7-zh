["```py\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"comprehend:*\",\n                \"s3:ListAllMyBuckets\",\n                \"s3:ListBucket\",\n                \"s3:GetBucketLocation\",\n                \"iam:ListRoles\",\n                \"iam:GetRole\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}    \n```", "```py\n{\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Action\": [\n                \"comprehend:DetectEntities\",\n                \"comprehend:BatchDetectEntities\",\n                \"comprehend:DetectPiiEntities\",\n                \"comprehend:ContainsPiiEntities\",\n                \"s3:ListAllMyBuckets\",\n                \"s3:ListBucket\",\n                \"s3:GetBucketLocation\",\n                \"iam:ListRoles\",\n                \"iam:GetRole\"\n            ],\n            \"Effect\": \"Allow\",\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```", "```py\nresponse = comprehend.detect_entities(Text=entry,\n                    LanguageCode='en',\n                    EndpointArn='endpoint-arn'\n            )\n```", "```py\n    aws application-autoscaling register-scalable-target \\\n    --service-namespace comprehend \\\n    --region <region> \\\n    --resource-id <your-comprehend-custom-endpoint> \\\n    --scalable-dimension comprehend:entity-recognizer-endpoint:DesiredInferenceUnits \\\n    --min-capacity 1 \\\n    --max-capacity 2\n    ```", "```py\n    {\n    \"TargetValue\": 90,\n    \"PredefinedMetricSpecification\": \n    {\n    \"PredefinedMetricType\": \"ComprehendInferenceUtilization\"\n    }\n    }\n    ```", "```py\n    aws application-autoscaling put-scaling-policy \\\n    --service-namespace comprehend \\\n    --region <region> \\\n    --scalable-dimension comprehend:entity-recognizer-endpoint:DesiredInferenceUnits \\\n    --resource-id <your-comprehend-custom-endpoint> \\\n    --policy-name CERPolicy \\\n    --policy-type TargetTrackingScaling \\\n    --target-tracking-scaling-policy-configuration file://config.json \n    ```", "```py\ncomprehend = boto3.client('comprehend')\nresponse = comprehend.describe_entity_recognizer(\n    EntityRecognizerArn='<arn-of-your-entity-recognizer>'\n) \n```", "```py\n    response = comprehend.start_entities_detection_job(\n        InputDataConfig={\n            'S3Uri': '<s3-location-input-documents>',\n            'InputFormat': 'ONE_DOC_PER_FILE'|'ONE_DOC_PER_LINE'\n        },\n        OutputDataConfig={\n            'S3Uri': '<s3-location-output-results>'\n        }, \n        DataAccessRoleArn='<IAM-role>',\n        JobName='<provide a job name>',\n        EntityRecognizerArn='<ARN of your custom entity recognizer>')\n    ```", "```py\n    textract = boto3.client('textract') \n    job = textract.start_document_analysis(\n        DocumentLocation={\n            'S3Object': {\n                'Bucket': '<s3-bucket-name>',\n                'Name': '<file-name>'\n            }\n        },\n        FeatureTypes=[\n            'TABLES'|'FORMS',\n        ],\n        NotificationChannel={\n            'SNSTopicArn': '<SNS-topic-arn>',\n            'RoleArn': '<IAM-role-arn>'\n        }\n    )\n    ```", "```py\n    textract_results = textract.get_document_analysis(\n        JobId='<JobID that was returned in the previous step>',\n        NextToken='<pagination-token>'\n    )\n    ```", "```py\n{'BlockType': 'LINE',\n   'Confidence': 98.13241577148438,\n   'Text': 'Lender Loan No./Universal Loan Identifier',\n   'Geometry': {'BoundingBox': {'Width': 0.1989699900150299,\n     'Height': 0.008062363602221012,\n     'Left': 0.06528056412935257,\n     'Top': 0.06330667436122894},\n    'Polygon': [{'X': 0.06528056412935257, 'Y': 0.06330667436122894},\n     {'X': 0.2642505466938019, 'Y': 0.06330667436122894},\n     {'X': 0.2642505466938019, 'Y': 0.07136903703212738},\n     {'X': 0.06528056412935257, 'Y': 0.07136903703212738}]},\n   'Id': '678695ec-6c9c-4943-9dad-2d64fc5acc44',\n   'Relationships': [{'Type': 'CHILD',\n     'Ids': ['2600b0dc-ee1b-421b-a7f6-49de293c7b20',\n      '70e20616-32b6-45f6-970d-e1a268ee97ec',\n      '69792a6d-5df6-4729-8d25-b1f3b05a8cd5',\n      'dfc16ed6-a526-46ac-98f3-f50453354c03',\n      '71a1f5a2-3ff3-40de-9e58-3288f2ac83ee']}]},   \n```", "```py\n    !python -m pip install amazon-textract-response-parser\n    ```", "```py\n    from trp import Document\n    textract = boto3.client('textract')\n    response = textract.analyze_document(Document={'Bytes': bytes_test}, FeatureTypes=['TABLES','FORMS'])\n    text = Document(response)\n    ```", "```py\n    for page in text.pages:\n                for table in page.tables:\n    for r, row in enumerate(table.rows):\n    for c, cell in enumerate(row.cells):\n    ```"]