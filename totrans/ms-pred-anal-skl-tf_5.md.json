["```py\nimport tensorflow as tf\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfrom tensorflow.contrib.layers import fully_connected\n\n%matplotlib inline\n```", "```py\nvector = np.arange(-5,5,0.1)\ndef relu(x) :\nreturn max(0.,x)\nrelu = np.vectorize(relu)\n```", "```py\nn_inputs = 28*28\nn_hidden1 = 350\nn_hidden2 = 200\nn_hidden3 = 100\nn_outputs = 10\n```", "```py\nX = tf.placeholder(tf.float32, shape=[None, n_inputs])\ny = tf.placeholder(tf.int64)\n```", "```py\nn_epochs = 40\nbatch_size = 50\n```", "```py\nn_inputs = X_train.shape[1] #23\nn_hidden1 = 256\nn_hidden2 = 128\nn_hidden3 = 64\nn_outputs = 1\n```", "```py\nX = tf.placeholder(X_train.dtype, shape=[None,n_inputs])\ny = tf.placeholder(y_train.dtype)\n```", "```py\nn_epochs = 40\nbatch_size = 100\n```", "```py\nn_inputs = X_train.shape[1] #25\nn_hidden1 = 200\nn_hidden2 = 200\nn_hidden3 = 200\nn_outputs = 2\n```", "```py\nX = tf.placeholder(X_train.dtype, shape=[None,n_inputs])\ny = tf.placeholder(y_train.dtype)\n```"]