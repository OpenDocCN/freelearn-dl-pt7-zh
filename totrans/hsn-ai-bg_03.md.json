["```py\n## Import Tensorflow at tf for simplicity\nimport tensorflow as tf\n\n## Define two constants \nconst1 = tf.constant([4])\nconst2 = tf.constant([5])\n\n## Multiply the constants\nproduct = tf.multiply(const1, const2)\n```", "```py\n## Variable Initializer\ninit = initialize_all_variables()\n\n## Initialize the session\nsess = tf.Session()\nsess.run(init)\n\n## Run the session\nprint(sess.run(product)) \n\n## Close the session\nsess.close()\n```", "```py\nwith tf.name_scope(\"my_scope\"):\n            ## Define two constants \n            const1 = tf.constant([4])\n            const2 = tf.constant([5])\n\n            ## Multiply the constants\n            product = tf.multiply(const1, const2)\n```", "```py\nconda install pytorch torchvision -c pytorch\n```", "```py\nimport torch x = torch.IntTensor([4])y = torch.IntTensor([5])product = x * y\n```", "```py\nimport torch import numpy as np## Create a numpy arraynumpy_array = np.random.randn(20,20)##Convert the numpy array to a pytorch tensorpytorch_tensor ...\n```", "```py\nimport keras.backend as K\nx = K.constant(5)\ny = K.constant(6)\nproduct = x * y\n\n```", "```py\ncd /Users/your_username/Downloads/\nssh -L localhost:8888:localhost:8888 -i <your .pem file name> ubuntu@<Your instance DNS>\n```", "```py\nlspci -nnk | grep -i nvidia\n```", "```py\nwget http://us.download.nvidia.com/XFree86/Linuxx86_64/367.44/NVIDIA-Linux-x86_64-367.44.run\n\nsudo chmod +x NVIDIA-Linux-x86_64-367.35.run\n./NVIDIA-Linux-x86_64-367.35.run --silent\n```", "```py\nwget\"http://developer.download.nvidia.com/compute/cuda/repos/ubuntu1604/x86_64/cuda-repo-ubuntu1604_8.0.44-1_amd64.deb\"\n## Install the drivers\nsudo chmod +x cuda_7.5.18_linux.run\n./cuda_7.5.18_linux.run --driver --silent\n./cuda_7.5.18_linux.run --toolkit --silent\n./cuda_7.5.18_linux.run --samples --silent\n\n```", "```py\necho ‘export LD_LIBRARY_PATH=”$LD_LIBRARY_PATH:/usr/local/cuda/lib64:/usr/local/cuda/extras/CUPTI/lib64\"’ >> ~/.bashrc\n```", "```py\nsudo scp cudnn-7.0-linux-x64-v4.0-prod.tgz\n```", "```py\ntar -xzvf cudnn-7.0-linux-x64-v4.0-prod.tgz\ncp cuda/lib64/* /usr/local/cuda/lib64/\ncp cuda/include/cudnn.h /usr/local/cuda/include/\n```", "```py\npip3 install tensorflow-gpu\n```", "```py\ncontrol /name Microsoft.DeviceManager\n```", "```py\nmy_list = []\n## Iterate through the available GPUs\nfor device in ['/gpu:0', '/gpu:1']:\n    ## Utilize the TensorFlow device manager\n    with tf.device(device):\n        x = tf.constant([1,2,3], shape=[1,3])\n        y = tf.constant([1,2,3],shape [3,1]) \n        my_list.append(tf.matmul(x, y))\n\n    with tf.device('/cpu:0'):\n        sum_operation = tf.add(x,y)\n\n    ## Run everything through a session\n    sess = tf.Session(config=tf.ConfigProto(log_device_placement=True))\n    sess.run(sum_operation)\n\n```"]