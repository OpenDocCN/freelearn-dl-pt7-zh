- en: AI for the Industrial IoT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Companies from a diverse background today are realizing the importance of **Artificial
    Intelligence** (**AI**), and hence, are incorporating it into their ecosystems.
    This chapter focuses on some of the successful AI-powered **industrial IoT** solutions.
    By the end of this chapter, you will have covered the following:'
  prefs: []
  type: TYPE_NORMAL
- en: How AI-powered IoT solutions are changing the industry
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Different industries offering AI-enabled analysis for their data to increase
    production, optimize logistics, and improve the customer experience
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Preventive maintenance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing a code to perform preventive maintenance based on aircraft engine
    sensors data
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Electrical load forecasting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Implementing a TensorFlow code to perform short-term load forecasting
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introduction to AI-powered industrial IoT
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The convergence of IoT, robotics, big data, and **machine learning** (**ML**)
    is creating enormous opportunities for industrial firms as well as significant
    challenges.
  prefs: []
  type: TYPE_NORMAL
- en: The availability of low-cost sensors, multiple cloud platforms, and powerful
    edge infrastructure is making it easier and profitable for industries to adopt
    AI. This AI-powered industrial IoT is transforming the way companies provide products
    and services or interact with customers and partners.
  prefs: []
  type: TYPE_NORMAL
- en: One of the promising areas of the AI-powered industrial IoT is **preventive
    maintenance**. Until now, industrial firms used to be reactive concerning maintenance,
    in the sense that they will perform maintenance either as a part of a fixed schedule,
    such as every six months, or only when some equipment stops functioning. For instance,
    a logistics company may have biannual service checks of every vehicle in its fleet
    and replace certain parts or entire vehicles on a set schedule. This reactive
    maintenance often wastes time and can be expensive. Applying AI algorithms to
    predict anomalies and errors before they happen can save a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: Another area where the AI-powered industrial IoT can achieve miracles is collaboration
    among humans and robots. Robots are already part of the industrial IoT ecosystem;
    working in assembly-lines and warehouses, they perform tasks that are especially
    repetitive or dangerous for human workers. The semi-autonomous trucks, trains,
    and loaders that are presently part of the mining industry are typically guided
    by pre-programmed routines, fixed tracks, and/or remote human operators.
  prefs: []
  type: TYPE_NORMAL
- en: In many industry situations, the latency introduced by cloud computations may
    not be acceptable, in such situations, the edge of computation infrastructure
    is needed.
  prefs: []
  type: TYPE_NORMAL
- en: 'To provide you with an idea of the spread and usage of AI-powered industrial
    IoT, the following is a list of some of the hot AI-powered startups providing
    industrial IoT services and solutions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Uptake Technologies Inc**: A Chicago based startup, co-founded in 2014 by
    Brad Keywell, makes software to monitor and analyze real-time data generated by
    industrial equipment and uses it to improve the performance and maintenance of
    the machinery. It is planning to expand its horizon to heavy target industries
    such as energy, railroads, oil and gas, mining, and wind power ([https://www.uptake.com/](https://www.uptake.com/)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**C3.ai**: A leading provider of big data, IoT, and AI applications, led by
    Thomas Siebel, has been declared a leader in the IoT platform by Forrester Research
    2018 industrial IoT Wave report. Founded in the year 2009, it has successfully
    provided industries services in the field of energy management, network efficiency,
    fraud detection, and inventory optimization ([https://c3.ai](https://c3.ai)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Alluvium**: Founded in 2015 by Drew Conway, the author of *Machine Learning
    for Hackers*, Alluvium uses ML and AI to help industrial companies achieve operation
    stability and improve their production. Their flagship product, Primer, helps
    companies identify the useful insights from the raw and distilled data from the
    sensors, allowing them to predict operational faults before they happen ([https://alluvium.io](https://alluvium.io)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Arundo Analytics**: Headed by Jakob Ramsøy, founded in the year 2015, Arundo
    Analytics provides services to connect live data to ML and other analytical models.
    They have products to scale deployed models, create and manage live data pipelines
    ([https://www.arundo.com](https://www.arundo.com)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Canvass Analytics**: It helps industries make critical business decisions
    using predictive analytics based on real-time operational data. The Canvass AI
    Platform distils the millions of data points generated by industrial machines,
    sensors, and operations systems and identifies patterns and correlations within
    the data to create new insights. Headed by Humera Malik, Canvass Analytics was
    founded in 2016 ([https://www.canvass.io](https://www.canvass.io)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: That is not the end software technology giants such as Amazon and Google are
    spending a lot of funds and infrastructure in industrial IoT. Google is using
    predictive modeling to reduce their data center cost, and PayPal is using ML to
    find fraudulent transactions.
  prefs: []
  type: TYPE_NORMAL
- en: Some interesting use cases
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'A large number of companies from diverse backgrounds are realizing the importance
    and impact of incorporating data analysis and AI into their eco-systems. From
    increasing their operations, supply chain, and maintenance efficiency to increasing
    employee productivity, to creating new business models, products, and services,
    there is not a facet where AI has not been explored. Following, we list some of
    the interesting use cases of AI-powered IoT in industries:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Predictive maintenance**: In predictive maintenance, AI algorithms are used
    to predict future failures of equipment before the failure occurs. This allows
    the company to perform maintenance, and hence, reduce the downtime. In the successive
    section, we will go into more details of how preventive maintenance is helpful
    for the industries and what are the various ways in which it can be done.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Asset tracking**: Also called **asset management**, this is the method to
    keep track of key physical assets. Keeping track of key assets, a company can
    optimize logistics, maintain inventory levels, and detect any inefficiencies.
    Traditionally, asset tracking was limited to adding RFID or barcodes to the assets,
    and hence, keeping a tab on their location, however, with the AI algorithms at
    our perusal, it is now possible to do more active asset tracking. For instance,
    a windmill power station can sense the change in wind speed, its direction, and
    even the temperature and use these parameters to align the individual windmill
    in the best direction to maximize power generation.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Fleet management and maintenance**: The transport industry had been using
    AI for fleet management by optimizing routes for about a decade. The availability
    of many low-cost sensors and the advancement of edge computing devices have now
    made it possible for transport companies to collect and use the data received
    from these sensors to not only optimize the logistics by better vehicle to vehicle
    communication and preventive maintenance, but to accelerate safety. Installing
    systems such as drowsiness detection, the risky behavior caused due to fatigue
    or distraction can be detected, and the driver can be asked to take countermeasures.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Predictive maintenance using AI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Heavy machinery and equipment are the backbone of any industry and like all
    physical objects, they deteriorate, age, and fail. Initially, companies used to
    perform reactive maintenance, that is, maintenance was done once the equipment
    failure was reported. This used to cause unplanned downtime. For any industry,
    an unscheduled, unplanned downtime can cause significant resource crunch and drastically
    reduce efficiency, production, and hence, profits. To deal with these problems,
    industries shifted to preventive maintenance.
  prefs: []
  type: TYPE_NORMAL
- en: 'In preventive maintenance, regular scheduled routine checks are performed at
    predetermined intervals. Preventive maintenance required keeping a record of equipment
    and their scheduled maintenance. The third industrial revolution, where computers
    were introduced into industries, made it easy to maintain and update these records. While
    preventive maintenance saves the industry from most unplanned downtimes, it still
    isn''t the best alternative, since regular checks can be an unnecessary expenditure.
    The following diagram outlines an example of the four industrial revolutions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](img/43713621-93d7-4bd5-a566-6b8ef8defa0c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image shared under Creative Commons Attribution: (https://commons.wikimedia.org/wiki/File:Industry_4.0.png)'
  prefs: []
  type: TYPE_NORMAL
- en: The current trend of automation and digitalization has lead to the fourth industrial
    revolution, also called **Industry 4.0**. This has allowed companies to deploy
    **machine-to-machine** (**M2M**) and **machine-to-human** (**M2H**) communication,
    along with AI-powered analytical algorithms, enabling predictive maintenance,
    that predict the breakdown before it occurs using past data. Predictive maintenance
    strategies have enormously eased the maintenance and management of the company
    resources.
  prefs: []
  type: TYPE_NORMAL
- en: 'The main idea behind predictive maintenance is to predict when equipment breakdown
    might occur based on condition-monitoring data. The sensors are used to monitor
    the condition and performance of equipment during their normal operation, depending
    on the equipment, different types of sensors may be used. Some of the common condition
    monitoring parameters/sensor values are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Vibration sensors mainly used to detect misalignment, imbalance, mechanical
    looseness, or wear on pumps and motors
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Current/voltage sensors to measure the current and voltage supplied to an electric
    motor
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ultrasound analysis to detect leakage in pipe systems or tanks, or mechanical
    malfunctions of movable parts and faults in electrical equipment
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Infrared thermography to identify temperature fluctuations
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sensors to detect liquid quality (for example in the case of wine sensors to
    detect the presence of different elements in the wine)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To implement predictive maintenance, the most important thing is to identify
    the conditions that need to be monitored. The sensors required to monitor these
    conditions are then deployed. Finally, the data from the sensors is collected
    to build a model.
  prefs: []
  type: TYPE_NORMAL
- en: Predictive maintenance using Long Short-Term Memory
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'For demonstrating predictive maintenance, we''ll use the simulated data provided
    in Azure ML ([https://gallery.azure.ai/Collection/Predictive-Maintenance-Template-3](https://gallery.azure.ai/Collection/Predictive-Maintenance-Template-3)[).](https://gallery.azure.ai/Collection/Predictive-Maintenance-Template-3)
    The dataset consists of the following three files:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Training data**: It contains the aircraft engine run to failure data. The
    download link for the data is [http://azuremlsamples.azureml.net/templatedata/PM_train.txt](http://azuremlsamples.azureml.net/templatedata/PM_train.txt).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Testing data**: It contains the aircraft engine operating data without failure
    events recorded. The data can be loaded from the link: [http://azuremlsamples.azureml.net/templatedata/PM_test.txt](http://azuremlsamples.azureml.net/templatedata/PM_test.txt).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Ground truth data**: Here, the information about the true remaining cycles
    for each engine in testing data is available. The link for the ground truth data is [http://azuremlsamples.azureml.net/templatedata/PM_truth.txt](http://azuremlsamples.azureml.net/templatedata/PM_truth.txt).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: According to the data description provided at the data source, the training
    data (`train_FD001.txt`) consists of multiple multivariate time series with cycle
    as the time unit, together with 21 sensor readings for each cycle. Each time series
    can be assumed as being generated from a different engine of the same type. Each
    engine is assumed to start with different degrees of initial wear and manufacturing
    variation, and this information is unknown to the user. In this simulated data,
    the engine is assumed to be operating normally at the start of each time series.
    It starts to degrade at some point during the series of the operating cycles.
    This degrades the progresses and grows in magnitude. When a predefined threshold
    is reached, then the engine is considered unsafe for further operation. In other
    words, the last cycle in each time series can be considered as the failure point
    of the corresponding engine. Taking the sample training data as an example, the
    engine with `id=1` fails at cycle `192`, and engine with `id=2` fails at cycle
    `287`.
  prefs: []
  type: TYPE_NORMAL
- en: The testing data (`test_FD001.txt`) has the same data schema as the training
    data. The only difference is that the data does not indicate when the failure
    occurs (in other words, the last time period does NOT represent the failure point).
    Taking the sample testing data, the engine with `id=1` runs from cycle `1` through
    cycle `31`. It is not shown how many more cycles this engine can last before it
    fails.
  prefs: []
  type: TYPE_NORMAL
- en: The ground truth data (`RUL_FD001.txt`) provides the number of remaining working
    cycles for the engines in the testing data. Taking the sample ground truth data
    shown as an example, the engine with `id=1` in the testing data can run another
    `112` cycles before it fails.
  prefs: []
  type: TYPE_NORMAL
- en: 'Since this is a time series data, we will use **Long Short-Term Memory** (**LSTM**)
    to classify weather the engine will fail in a certain time period or not. The
    code presented here is based on the implementation provided at the GitHub link
    of Umberto Griffo: ([https://github.com/umbertogriffo/Predictive-Maintenance-using-LSTM](https://github.com/umbertogriffo/Predictive-Maintenance-using-LSTM)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'The modules needed to implement predictive maintenance are imported in the
    first step. We also set the seed for random calculations so that the result is
    reproducible:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s read the data and assign column names, shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'As the first step, we make a prediction whether the engine will fail in the
    time period or not, hence our label will be `1` or `0`, that is, this will be
    a binary classification problem. To create the binary label, we preprocess the
    data and we create a new label **remaining useful life** (**RUL**). We also create
    a binary `label1` variable telling if a specific engine is going to fail within
    `w1` cycles or not. And finally, the data (non-sensor) is normalized, shown as
    follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/db9d096a-4f3b-4f94-8bfa-f43be21b0d05.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Similar preprocessing is performed on the test dataset, with just one change—the
    RUL value is obtained from the ground truth data:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/af874577-0db2-4421-9166-23f0ab836a8a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Since we are using LSTM for time-series modeling, we create a function that
    will generate the sequence to be fed to the LSTM as per the window size. We have
    chosen the window size of `50`. We will also need a function to generate the corresponding
    label:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Let''s now generate the training sequence and corresponding label for our data,
    shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'We now build an LSTM model with two LSTM layers and a fully connected layer.
    The model is trained for binary classification, and therefore, it tries to reduce
    the binary cross entropy loss. The `Adam` optimizer is used to update the model
    parameters:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/39a6a841-8fcb-499c-8944-b60c0a07e23e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We train the model, shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'The trained model gives 98% accuracy on the test dataset and 98.9% accuracy
    on the validation dataset. The precision value is `0.96`, and there is a recall
    of `1.0` and an F1 score of `0.98`. Not bad, right! The following diagram shows
    these results of the train model:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/d3461ac4-07d5-4701-9a62-a70015086c06.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can use the same data to also predict the RUL of the aircraft engines, that
    is, predict the engines time to failure. This will be a regression problem now
    we can use the LSTM model to perform regression as well. The initial steps will
    be the same as before, but from the fifth step onwards we will have changes. While
    the input data sequence generated will remain the same as before, the target will
    no longer be the binary label, instead, we will use RUL as the target for our
    regression model:'
  prefs: []
  type: TYPE_NORMAL
- en: 'We create the target value using the same `gen_labels()` function. We also
    create a validation set using the `gen_sequence()` function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: 'Create an LSTM model. We are using `r2` as the metrics during training, therefore,
    we use the Keras custom metric feature and our own metrics function:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](img/48c70894-7fbe-4469-be8a-77a44b46f56c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Train the model on the training dataset, shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'The trained model provides an `r2` value of 0.80 on test dataset and 0.72 on
    the validation dataset. We can improve our results by hypertuning the model parameters.
    Following, you can see the loss of the model for train and validation datasets
    during training:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/6285b89e-5545-4260-9e20-e9297f4e6d08.png)'
  prefs: []
  type: TYPE_IMG
- en: To run this code, please ensure you have Tensorflow 1.4<, and Keras 2.1.2\.
    If you have a higher version of Keras, first uninstall it using `pip uninstall
    keras` and then reinstall it using `pip install keras==2.1.2`.
  prefs: []
  type: TYPE_NORMAL
- en: The complete code with both the binary classification and regression model are
    available at the GitHub repository, `Chapter10/Predictive_Maintenance_using_LSTM.ipynb`.
    We can also create a model to determine if the failure will occur in different
    time windows, for example, fails in the window *(1,w[0])* or fails in the window
    (*w[0+1], w[1]*) days, and so on. This will then be a multi-classification problem,
    and data will need to be preprocessed accordingly. You can read more about this
    predictive maintenance template from Azure AI Gallery: [https://gallery.azure.ai/Experiment/Predictive-Maintenance-Step-2A-of-3-train-and-evaluate-regression-models-2](https://gallery.azure.ai/Experiment/Predictive-Maintenance-Step-2A-of-3-train-and-evaluate-regression-models-2).
  prefs: []
  type: TYPE_NORMAL
- en: Predictive maintenance advantages and disadvantages
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'According to a survey report by GE ([https://www.gemeasurement.com/sites/gemc.dev/files/ge_the_impact_of_digital_on_unplanned_downtime_0.pdf](https://www.gemeasurement.com/sites/gemc.dev/files/ge_the_impact_of_digital_on_unplanned_downtime_0.pdf)).
    The downtime negatively affects the performance of the oil and gas industry. This
    is true, not only for the oil and gas industry, but all industries. Hence, to
    reduce downtime, and increase efficiency, it is important that predictive maintenance
    is adopted. However, the cost of establishing predictive maintenance is quite
    high, but once a predictive maintenance system has been properly established,
    it helps to provide several cost-effective benefits, such as the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Minimized time is required for equipment maintenance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Minimum production time is lost due to maintenance
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: And finally, the spare parts cost is also minimized
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Successful predictive maintenance can reshape the company as a whole in a positive
    way.
  prefs: []
  type: TYPE_NORMAL
- en: Electrical load forecasting in industry
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Electricity is presently the most important energy vector in both the domestic
    and industrial sectors. Since, unlike fuels, it is hard and expensive to store
    electricity, there is a need for a precise coupling between its generation and
    demand. Electrical energy load forecasting, hence, is very vital. Depending upon
    the time range (forecasting horizon) electrical load forecasting is classified
    into the following three categories:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Short-term load forecasting**: The forecast is made for one hour to a few
    weeks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Medium-term load forecasting**: The forecast duration spreads from a few
    weeks to a few months'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Long-term load forecasting**: Here, the forecasting is done from a few months
    to years'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Depending upon the need and application one may have to plan either one or all
    of the previous load forecasting categories. In recent years, a lot of research
    work has been done in the area of **short-term load forecasting** (**STLF**).
    STLF can assist industries by providing an accurate means to predict future load,
    which can help in precise planning, decrease in operating cost, and thus, increase
    profit and provide a more reliable electrical supply. STLF predicts the future
    energy demands based on historical data (acquired through smart meters) and predicted
    whether conditions.
  prefs: []
  type: TYPE_NORMAL
- en: The load forecasting problem is a regression problem. It can be modeled as a
    time series problem or as a static model. Modeling load forecasting as a time
    series data is the most popular choice. With time series modeling, we can use
    the standard ML time series models like ARIMA, or we can make use of deep learning
    models such as recurrent neural networks and LSTM.
  prefs: []
  type: TYPE_NORMAL
- en: 'For a comprehensive review of various strategies and models used in the electrical
    load forecasting, refer to this paper:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Fallah, S., Deo, R., Shojafar, M., Conti, M., and Shamshirband, S. (2018).
    *Computational Intelligence Approaches for Energy Load forecasting in Smart Energy
    Management Grids: State of the Art, Future Challenges, and Research Directions*.
    Energies, 11(3), 596.'
  prefs: []
  type: TYPE_NORMAL
- en: STLF using LSTM
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here, we present the code for performing a short-term load forecasting with
    the help of LSTM. The data for training and testing is taken from the UCI ML website
    ([https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption#](https://archive.ics.uci.edu/ml/datasets/Individual+household+electric+power+consumption#)).
    The code for STLF has been adapted from GitHub ([https://github.com/demmojo/lstm-electric-load-forecast](https://github.com/demmojo/lstm-electric-load-forecast)):'
  prefs: []
  type: TYPE_NORMAL
- en: 'We import the necessary modules and set random seeds, shown as follows:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: 'Define utility functions for loading the data and converting it into a sequence
    suited for LSTM input:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Build the LSTM model, the model we have built contains two LSTM and one fully
    connected layer:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: 'Train the model, as shown in the following code:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: 'We can see from the following graph that our model is making good predictions:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](img/cb3ab15b-14e4-4a5b-9ed6-d6ff41d61856.png)'
  prefs: []
  type: TYPE_IMG
- en: The complete code is available at GitHub: `Chapter10/Electrical_load_Forecasting.ipynb`.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we saw that AI-empowered IoT has had a significant impact on
    industries. From manufacturing, logistics, agriculture, and mining to creating
    new products and services, AI has touched every facet. We can hopefully assume
    that the AI-powered industrial IoT will alter and disrupt current business processes
    and models for the better.
  prefs: []
  type: TYPE_NORMAL
- en: The next chapter will showcase how AI and the IoT can help to shape better cities.
  prefs: []
  type: TYPE_NORMAL
