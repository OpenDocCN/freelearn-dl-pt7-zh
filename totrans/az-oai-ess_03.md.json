["```py\nfrom openai import AzureOpenAI\nclient = AzureOpenAI(\n  api_key = os.getenv(\"AZURE_OPENAI_API_KEY\"),\n  api_version = \"2024-04-01-preview\",\n  azure_endpoint =os.getenv(\"AZURE_OPENAI_ENDPOINT\")\n)\nresponse= client.embeddings.create(input = \"<INPUT TEXT>\",\n              model=<deployment name>).data[0].embedding\nprint (response)\n```", "```py\nfrom openai import AzureOpenAI\nimport numpy as np\nclient = AzureOpenAI(\n  api_key = os.getenv(\"AZURE_OPENAI_API_KEY\"),\n  api_version = \"2024-04-01-preview\",\n  azure_endpoint =os.getenv(\"AZURE_OPENAI_ENDPOINT\")\n)\ndef normalize(x):\n    x = np.array(x)\n    if x.ndim == 1:\n        norm = np.linalg.norm(x)\n        if norm == 0:\n            return x\n        return x / norm\n    else:\n        norm = np.linalg.norm(x, 2, axis=1, keepdims=True)\n        return np.where(norm == 0, x, x / norm)\nresponse = client.embeddings.create(\n    model=\"<DEPLOYMENT NAME>\",\n    input=\"<INPUT TEXT>\",\n    encoding_format=\"float\"\n)\ncut_dim = response.data[0].embedding[:256]\nnorm_dim = normalize(cut_dim)\nprint(norm_dim)\n```", "```py\n    {\"role\": \"system\", \"content\": \"You're an AI assistant designed to help users search for hotels. When a user asks for help finding a hotel, you should call the search_hotels function.\"}\n    ```", "```py\n    {\"role\": \"system\", \"content\": \"Avoid assuming values for functions; instead, seek clarification when a user's request is unclear.\"}\n    ```", "```py\n    {\"role\": \"system\", \"content\": \"Only use the functions you have been provided with.\"}\n    ```"]