["```py\ndata_folder = '../../data/Shakespeare'\ndata_file = 'alllines.txt'\n```", "```py\nf = open(data_file)\n```", "```py\ncontents = f.read()\n```", "```py\nprint(contents[:1000])\n```", "```py\n\"ACT I\"\n\"SCENE I. London. The palace.\"\n\"Enter KING HENRY, LORD JOHN OF LANCASTER, the EARL of WESTMORELAND, SIR WALTER BLUNT, and others\"\n\"So shaken as we are, so wan with care,\"\n\"Find we a time for frighted peace to pant,\"\n\"And breathe short-winded accents of new broils\"\n\"To be commenced in strands afar remote.\"\n\"No more the thirsty entrance of this soil\"\n\"will daub her lips with her own children's blood,\"\n\"Nor more will trenching war channel her fields,\"\n\"Nor bruise her flowerets with the armed hoofs\"\n\"Of hostile paces: those opposed eyes,\"\n\"Which, like the meteors of a troubled heaven,\"\n\"All of one nature, of one substance bred,\"\n\"Did lately meet in the intestine shock\"\n\"And furious close of civil butchery\"\n\"will now, in mutual well-beseeming ranks,\"\n\"March all one way and be no more opposed\"\n\"Against acquaintance, kindred and allies:\"\n\"The edge of war, like an ill-sheathed knife,\"\n\"No more will cut his master. Therefore, friends,\"\n\"As far as to the sepulchre of Christ,\"\n\"Whose\n```", "```py\ndata_folder = '../../data/household_power_consumption' \ndata_file = 'household_power_consumption.csv'\n```", "```py\nimport csv\nimport os\n\nwith open(os.path.join(data_folder,data_file),newline='') as csvfile:\n   csvreader = csv.reader(csvfile)\n   for row in csvreader:\n     print(row)\n```", "```py\n['date', 'time', 'global_active_power', 'global_reactive_power', 'voltage', 'global_intensity', 'sub_metering_1', 'sub_metering_2', 'sub_metering_3'] ['0007-01-01', '00:00:00', '2.58', '0.136', '241.97', '10.6', '0', '0', '0'] ['0007-01-01', '00:01:00', '2.552', '0.1', '241.75', '10.4', '0', '0', '0'] ['0007-01-01', '00:02:00', '2.55', '0.1', '241.64', '10.4', '0', '0', '0']\n```", "```py\n# read the file and write first ten rows\nwith open(os.path.join(data_folder, data_file), newline='') as csvfile, \\\n        open(os.path.join(data_folder, 'temp.csv'), 'w', newline='') as tempfile:\n    csvreader = csv.reader(csvfile)\n    csvwriter = csv.writer(tempfile)\n    for row, i in zip(csvreader, range(10)):\n        csvwriter.writerow(row)\n\n# read and print the newly written file\nwith open(os.path.join(data_folder, 'temp.csv'), newline='') as tempfile:\n    csvreader = csv.reader(tempfile)\n    for row in csvreader:\n        print(row)\n```", "```py\n    # read the file and write first ten rows with '|' delimiter\nwith open(os.path.join(data_folder, data_file), newline='') as csvfile, \\\n        open(os.path.join(data_folder, 'temp.csv'), 'w', newline='') as tempfile:\n    csvreader = csv.reader(csvfile)\n    csvwriter = csv.writer(tempfile, delimiter='|')\n    for row, i in zip(csvreader, range(10)):\n        csvwriter.writerow(row)\n\n# read and print the newly written file\nwith open(os.path.join(data_folder, 'temp.csv'), newline='') as tempfile:\n    csvreader = csv.reader(tempfile, delimiter='|')\n    for row in csvreader:\n        print(row)\n```", "```py\n['0007-01-01|00:00:00|2.58|0.136|241.97|10.6|0|0|0']\n```", "```py\n0007-01-01|00:00:00|2.58|0.136|241.97|10.6|0|0|0\n0007-01-01|00:01:00|2.552|0.1|241.75|10.4|0|0|0\n0007-01-01|00:02:00|2.55|0.1|241.64|10.4|0|0|0\n0007-01-01|00:03:00|2.55|0.1|241.71|10.4|0|0|0\n0007-01-01|00:04:00|2.554|0.1|241.98|10.4|0|0|0\n0007-01-01|00:05:00|2.55|0.1|241.83|10.4|0|0|0\n0007-01-01|00:06:00|2.534|0.096|241.07|10.4|0|0|0\n0007-01-01|00:07:00|2.484|0|241.29|10.2|0|0|0\n0007-01-01|00:08:00|2.468|0|241.23|10.2|0|0|0\n```", "```py\n# read the file and write first ten rows with '|' delimiter, all quoting and * as a quote charachetr.\nwith open(os.path.join(data_folder, data_file), newline='') as csvfile, \\\n        open('temp.csv', 'w', newline='') as tempfile:\n    csvreader = csv.reader(csvfile)\n    csvwriter = csv.writer(tempfile, delimiter='|', quotechar='*',quoting=csv.QUOTE_ALL)\n    for row, i in zip(csvreader, range(10)):\n        csvwriter.writerow(row)\n```", "```py\n*0007-01-01*|*00:00:00*|*2.58*|*0.136*|*241.97*|*10.6*|*0*|*0*|*0*\n*0007-01-01*|*00:01:00*|*2.552*|*0.1*|*241.75*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:02:00*|*2.55*|*0.1*|*241.64*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:03:00*|*2.55*|*0.1*|*241.71*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:04:00*|*2.554*|*0.1*|*241.98*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:05:00*|*2.55*|*0.1*|*241.83*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:06:00*|*2.534*|*0.096*|*241.07*|*10.4*|*0*|*0*|*0*\n*0007-01-01*|*00:07:00*|*2.484*|*0*|*241.29*|*10.2*|*0*|*0*|*0*\n*0007-01-01*|*00:08:00*|*2.468*|*0*|*241.23*|*10.2*|*0*|*0*|*0*\n```", "```py\n['*0007-01-01*', '*00:00:00*', '*2.58*', '*0.136*', '*241.97*', '*10.6*', '*0*', '*0*', '*0*']\n```", "```py\n['0007-01-01', '00:00:00', '2.58', '0.136', '241.97', '10.6', '0', '0', '0']\n```", "```py\ndf = pd.read_csv('temp.csv')\nprint(df)\n```", "```py\n         date      time  global_active_power  global_reactive_power  voltage  \\\n0  0007-01-01  00:00:00                2.580                  0.136   241.97   \n1  0007-01-01  00:01:00                2.552                  0.100   241.75   \n2  0007-01-01  00:02:00                2.550                  0.100   241.64   \n3  0007-01-01  00:03:00                2.550                  0.100   241.71   \n4  0007-01-01  00:04:00                2.554                  0.100   241.98   \n5  0007-01-01  00:05:00                2.550                  0.100   241.83   \n6  0007-01-01  00:06:00                2.534                  0.096   241.07   \n7  0007-01-01  00:07:00                2.484                  0.000   241.29   \n8  0007-01-01  00:08:00                2.468                  0.000   241.23   \n\n   global_intensity  sub_metering_1  sub_metering_2  sub_metering_3  \n0              10.6               0               0               0  \n1              10.4               0               0               0  \n2              10.4               0               0               0  \n3              10.4               0               0               0  \n4              10.4               0               0               0  \n5              10.4               0               0               0  \n6              10.4               0               0               0  \n7              10.2               0               0               0  \n8              10.2               0               0               0  \n```", "```py\ndf.to_csv('temp1.cvs')\n```", "```py\narr = np.loadtxt('temp.csv', skiprows=1, usecols=(2,3), delimiter=',')\narr\n```", "```py\narray([[2.58 , 0.136],\n       [2.552, 0.1  ],\n       [2.55 , 0.1  ],\n       [2.55 , 0.1  ],\n       [2.554, 0.1  ],\n       [2.55 , 0.1  ],\n       [2.534, 0.096],\n       [2.484, 0\\.   ],\n       [2.468, 0\\.   ]])\n```", "```py\narr = np.genfromtxt('temp.csv', skip_header=1, usecols=(2,3), delimiter=',')\n```", "```py\nnp.savetxt('temp.csv', arr, delimiter=',')\n```", "```py\nwb = Workbook()\n```", "```py\nws = wb.active()\n```", "```py\nws.title = \"Demo Name\"\n```", "```py\nws.append()\n```", "```py\n# Assigns the cell corresponding to \n# column A and row 10 a value of 5\nws.['A10'] = 5  \n#or\nws.cell(column=1, row=10, value=5)\n```", "```py\n# Creating and writing into xlsx file\nfrom openpyxl import Workbook\nfrom openpyxl.compat import range\nfrom openpyxl.utils import get_column_letter\nwb = Workbook()\ndest_filename = 'empty_book.xlsx'\nws1 = wb.active\nws1.title = \"range names\"\nfor row in range(1, 40):\n ws1.append(range(0,100,5))\nws2 = wb.create_sheet(title=\"Pi\")\nws2['F5'] = 2 * 3.14\nws2.cell(column=1, row=5, value= 3.14)\nws3 = wb.create_sheet(title=\"Data\")\nfor row in range(1, 20):\n for col in range(1, 15):\n _ = ws3.cell(column=col, row=row, value=\"\\\n {0}\".format(get_column_letter(col)))\nprint(ws3['A10'].value)\nwb.save(filename = dest_filename)\n\n# Reading from xlsx file\nfrom openpyxl import load_workbook\nwb = load_workbook(filename = 'empty_book.xlsx')\nsheet_ranges = wb['range names']\nprint(wb.get_sheet_names())\nprint(sheet_ranges['D18'].value)\n```", "```py\nimport pandas as pd\ndf = pd.read_excel(\"empty_book.xlsx\", sheet_name=0)\ndf.describe()\nresult = df * 2\nresult.describe()\nresult.to_excel(\"empty_book_modified.xlsx\")\n```", "```py\n{ \"_id\" : \"01001\", \"city\" : \"AGAWAM\", \"loc\" : [ -72.622739, 42.070206 ], \"pop\" : 15338, \"state\" : \"MA\" }\n```", "```py\nimport os\nimport json\nfrom pprint import pprint\n\nwith open(os.path.join(data_folder,data_file)) as json_file:\n    for line,i in zip(json_file,range(10)):\n        json_data = json.loads(line)\n        pprint(json_data)\n```", "```py\n{'_id': '01001',\n 'city': 'AGAWAM',\n 'loc': [-72.622739, 42.070206],\n 'pop': 15338,\n 'state': 'MA'}\n```", "```py\ndf = pd.read_json(os.path.join(data_folder,data_file), lines=True)\nprint(df)\n```", "```py\n         _id             city                               loc    pop state\n0       1001           AGAWAM           [-72.622739, 42.070206]  15338    MA\n1       1002          CUSHMAN            [-72.51565, 42.377017]  36963    MA\n...      ...              ...                               ...    ...   ...\n29351  99929         WRANGELL          [-132.352918, 56.433524]   2573    AK\n29352  99950        KETCHIKAN           [-133.18479, 55.942471]    422    AK\n\n[29353 rows x 5 columns]\n```", "```py\nimport numpy as np\narr = np.loadtxt('temp.csv', skiprows=1, usecols=(2,3), delimiter=',')\n```", "```py\nimport tables\nh5filename = 'pytable_demo.hdf5'\nwith tables.open_file(h5filename,mode='w') as h5file:\n```", "```py\n    root = h5file.root\n```", "```py\n    h5file.create_array(root,'global_power',arr)\n```", "```py\n    h5file.close()\n```", "```py\nwith tables.open_file(h5filename,mode='r') as h5file:\n    root = h5file.root\n    for node in h5file.root:\n        ds = node.read()\n        print(type(ds),ds.shape)\n        print(ds)\n```", "```py\nimport pandas as pd\nimport numpy as np\narr = np.loadtxt('temp.csv', skiprows=1, usecols=(2,3), delimiter=',')\nimport pandas as pd\nstore=pd.HDFStore('hdfstore_demo.hdf5')\nprint(store)\nstore['global_power']=pd.DataFrame(arr)\nstore.close()\n```", "```py\nimport pandas as pd\nstore=pd.HDFStore('hdfstore_demo.hdf5')\nprint(store)\nprint(store['global_power'])\nstore.close()\n```", "```py\nimport h5py\nhdf5file = h5py.File('pytable_demo.hdf5')\nds=hdf5file['/global_power']\nprint(ds)\nfor i in range(len(ds)):\n    print(arr[i])\nhdf5file.close()\n```", "```py\n<HDF5 dataset \"global_power\": shape (9, 2), type \"<f8\">\n[2.58  0.136]\n[2.552 0.1  ]\n[2.55 0.1 ]\n[2.55 0.1 ]\n[2.554 0.1  ]\n[2.55 0.1 ]\n[2.534 0.096]\n[2.484 0\\.   ]\n[2.468 0\\.   ]\n```", "```py\nimport numpy as np\narr = np.loadtxt('temp.csv', skiprows=1, usecols=(2,3), delimiter=',')\n\nimport h5py\nhdf5file = h5py.File('h5py_demo.hdf5')\ndataset1 = hdf5file.create_dataset('global_power',data=arr)\nhdf5file.close()\n```", "```py\ndataset1.attrs['owner']='City Corp.'\nprint(dataset1.attrs['owner'])\n\nhdf5file.attrs['security_level']='public'\nprint(hdf5file.attrs['security_level'])\n```", "```py\nimport sqlite3 \nimport pandas as pd\nconnection = sqlite3.connect('database.sqlite')\nprint(\"Database opened successfully\")\n```", "```py\ntables = pd.read_sql(\"SELECT * FROM sqlite_master WHERE \n        type='table';\", connection)\nprint(tables)\n```", "```py\ncountries = pd.read_sql(\"SELECT * FROM Country;\", connection)\ncountries.head()\n```", "```py\nselected_players = pd.read_sql_query(\"SELECT * FROM Player WHERE\n         height >= 180 AND weight >= 170 \", connection)\nprint(selected_players)\n```", "```py\nconnection.close()\n```", "```py\npip install mysql-connector-python \n```", "```py\nimport mysql.connector \nconnection = mysql.connector.connect(host=\"127.0.0.1\", # your host \n        user=\"root\", # username\n        password=\"**********\" ) # password\n```", "```py\nmycursor = connection.cursor()\nmycursor.execute(\"SHOW DATABASES\")\nfor x in mycursor:\n    print(x)\n```", "```py\nconnection = mysql.connector.connect(host=\"127.0.0.1\", # your host \nuser=\"root\", # username\npassword=\"**********\" ,  #replace with your password\ndatabase = 'mysql')\nmycursor = connection.cursor()\nmycursor.execute(\"SHOW TABLES\")\nfor x in mycursor:\n    print(x)\n```", "```py\nfrom pymongo import MongoClient\nclient = MongoClient()\ndb = client.test\n```", "```py\nfrom sklearn.datasets import load_breast_cancer\nimport pandas as pd\n\ncancer = load_breast_cancer()\ndata = pd.DataFrame(cancer.data, columns=[cancer.feature_names])\n\ndata.head()\n```", "```py\nimport json\ndata_in_json = data.to_json(orient='split')\nrows = json.loads(data_in_json)\ndb.cancer_data.insert(rows)\n```", "```py\ncursor = db['cancer_data'].find({})\ndf = pd.DataFrame(list(cursor))\nprint(df)\n```", "```py\nfrom hdfs3 import HDFileSystem\nhdfs = HDFileSystem(host = 'localhost', port=8020)\n```", "```py\nprint(hdfs.ls('/tmp')) \n```", "```py\nwith hdfs.open('/tmp/file1.txt','wb') as f:\n    f.write(b'You are Awesome!')\n```", "```py\nwith hdfs.open('/tmp/file1.txt') as f:\n    print(f.read())\n```", "```py\nimport pyarrow as pa\nhdfs = pa.hdfs.connect(host='hostname', port=8020, driver='libhdfs')\n```"]