["```py\n    def Classifier(n_features, n_hidden=32, p_dropout=0.2,train=True):\n        with nn.parameter_scope('classifier'):\n            layer1 = PF.affine(n_features, n_hidden, name='layer1')\n            layer1 = F.relu(layer1)\n            if (train):\n                layer1 = F.dropout(layer1,p_dropout)\n            layer2 = PF.affine(layer1, n_hidden, name='layer2')\n            layer2 = F.relu(layer2)\n            if (train):\n                layer2 = F.dropout(layer2,p_dropout)\n            layer3 = PF.affine(layer2, n_hidden, name='layer3')\n            layer3 = F.relu(layer3)\n            if (train):\n                layer3 = F.dropout(layer3,p_dropout)\n            layer4 = PF.affine(layer3, 1, name='layer4')\n        return layer4\n    ```", "```py\n    Classifier accuracy :  84.85797101449275 Classifier CV2NB Score : 0.1644\n    ```", "```py\nTotal data points: 4000\n# non-protected examples: 1873\n# protected examples: 2127\nNon-protected in positive class: 1323 (71%)\nProtected in positive class: 677 (32%)\n```", "```py\nn_samples = 2000 # Number of data points\ndisc_factor = math.pi / 4.0 # represents f in the paper-- decrease it to generate more discrimination\ngamma = 2000.0\n```"]