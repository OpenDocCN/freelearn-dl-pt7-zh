["```py\n$ mkdir ObjectDetector\n$ cd ObjectDetector\n```", "```py\n$ mkdir Website\n$ touch Website/index.html\n$ touch Website/scripts.js\n```", "```py\n$ pipenv --three\n$ pipenv install boto3\n$ pipenv install chalice\n```", "```py\n$ pipenv shell\n```", "```py\n$ chalice new-project Capabilities\n```", "```py\n├── ObjectDetector/\n ├── Capabilities/\n ├── .chalice/\n ├── config.json\n ├── app.py\n ├── requirements.txt\n...\n```", "```py\ncd Capabilities\nmkdir chalicelib\ntouch chalicelib/__init__.py\ncd ..\n```", "```py\nProject Structure\n------------\n├── ObjectDetector/\n ├── Capabilities/\n ├── .chalice/\n ├── config.json\n ├── chalicelib/\n ├── __init__.py\n ├── app.py\n ├── requirements.txt\n ├── Website/\n ├── index.html\n ├── script.js\n ├── Pipfile\n ├── Pipfile.lock\n```", "```py\nimport boto3\n\nclass StorageService:\n    def __init__(self, storage_location):\n        self.client = boto3.client('s3')\n        self.bucket_name = storage_location\n\n    def get_storage_location(self):\n        return self.bucket_name\n\n    def list_files(self):\n        response = self.client.list_objects_v2(Bucket = self.bucket_name)\n\n        files = []\n        for content in response['Contents']:\n            files.append({\n                'location': self.bucket_name,\n                'file_name': content['Key'],\n                'url': \"http://\" + self.bucket_name + \".s3.amazonaws.com/\" + content['Key']\n            })\n        return files\n```", "```py\nimport boto3\n\nclass RecognitionService:\n    def __init__(self, storage_service):\n        self.client = boto3.client('rekognition')\n        self.bucket_name = storage_service.get_storage_location()\n\n    def detect_objects(self, file_name):\n        response = self.client.detect_labels(\n            Image = {\n                'S3Object': {\n                    'Bucket': self.bucket_name,\n                    'Name': file_name\n                }\n            }\n        )\n\n        objects = []\n        for label in response[\"Labels\"]:\n            objects.append({\n                'label': label['Name'],\n                'confidence': label['Confidence']\n            })\n        return objects\n```", "```py\nfrom chalice import Chalice\nfrom chalicelib import storage_service\nfrom chalicelib import recognition_service\n\nimport random\n\n#####\n# chalice app configuration\n#####\napp = Chalice(app_name='Capabilities')\napp.debug = True\n\n#####\n# services initialization\n#####\nstorage_location = 'contents.aws.ai'\nstorage_service = storage_service.StorageService(storage_location)\nrecognition_service = recognition_service.RecognitionService(storage_service)\n\n@app.route('/demo-object-detection', cors = True)\ndef demo_object_detection():\n    \"\"\"randomly selects one image to demo object detection\"\"\"\n    files = storage_service.list_files()\n    images = [file for file in files if file['file_name'].endswith(\".jpg\")]\n    image = random.choice(images)\n\n    objects = recognition_service.detect_objects(image['file_name'])\n\n    return {\n        'imageName': image['file_name'],\n        'imageUrl': image['url'],\n        'objects': objects\n    }\n```", "```py\n$ cd Capabilities\n$ chalice local\nRestarting local dev server.\nFound credentials in shared credentials file: ~/.aws/credentials\nServing on http://127.0.0.1:8000\n```", "```py\n$ curl http://127.0.0.1:8000/demo-object-detection\n{\"imageName\":\"beagle_on_gravel.jpg\",\"imageUrl\":\"https://contents.aws.ai.s3.amazonaws.com/beagle_on_gravel.jpg\",\"objects\":[{\"label\":\"Pet\",\"confidence\":98.9777603149414},{\"label\":\"Hound\",\"confidence\":98.9777603149414},{\"label\":\"Canine\",\"confidence\":98.9777603149414},{\"label\":\"Animal\",\"confidence\":98.9777603149414},{\"label\":\"Dog\",\"confidence\":98.9777603149414},{\"label\":\"Mammal\",\"confidence\":98.9777603149414},{\"label\":\"Beagle\",\"confidence\":98.0347900390625},{\"label\":\"Road\",\"confidence\":82.47952270507812},{\"label\":\"Dirt Road\",\"confidence\":74.52912902832031},{\"label\":\"Gravel\",\"confidence\":74.52912902832031}]}\n```", "```py\n<!doctype html>\n<html lang=\"en\"/>\n\n<head>\n    <meta charset=\"utf-8\"/>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n\n    <title>Object Detector</title>\n\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/w3css/4/w3.css\">\n    <link rel=\"stylesheet\" href=\"https://www.w3schools.com/lib/w3-theme-blue-grey.css\">\n</head>\n\n<body class=\"w3-theme-14\" onload=\"runDemo()\">\n    <div style=\"min-width:400px\">\n        <div class=\"w3-bar w3-large w3-theme-d4\">\n            <span class=\"w3-bar-item\">Object Detector</span>\n        </div>\n\n        <div class=\"w3-container w3-content\">\n            <p class=\"w3-opacity\"><b>Randomly Selected Demo Image</b></p>\n            <div class=\"w3-panel w3-white w3-card w3-display-container\"\n                style=\"overflow: hidden\">\n                <div style=\"float: left;\">\n                    <img id=\"image\" width=\"600\"/>\n                </div>\n                <div id=\"objects\" style=\"float: right;\">\n                    <h5>Objects Detected:</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <script src=\"img/scripts.js\"></script>\n</body>\n\n</html>\n```", "```py\n\"use strict\";\n\nconst serverUrl = \"http://127.0.0.1:8000\";\n\nfunction runDemo() {\n    fetch(serverUrl + \"/demo-object-detection\", {\n        method: \"GET\"\n    }).then(response => {\n        if (!response.ok) {\n            throw response;\n        }\n        return response.json();\n    }).then(data => {\n        let imageElem = document.getElementById(\"image\");\n        imageElem.src = data.imageUrl;\n        imageElem.alt = data.imageName;\n\n        let objectsElem = document.getElementById(\"objects\");\n        let objects = data.objects;\n        for (let i = 0; i < objects.length; i++) {\n            let labelElem = document.createElement(\"h6\");\n            labelElem.appendChild(document.createTextNode(\n                objects[i].label + \": \" + objects[i].confidence + \"%\")\n            );\n            objectsElem.appendChild(document.createElement(\"hr\"));\n            objectsElem.appendChild(labelElem);\n        }\n    }).catch(error => {\n        alert(\"Error: \" + error);\n    });\n}\n```", "```py\nProject Organization\n------------\n├── ObjectDetector/\n    ├── Capabilities/\n        ├── .chalice/\n            ├── config.json\n        ├── chalicelib/\n            ├── __init__.py\n            ├── recognition_service.py\n            ├── storage_service.py\n        ├── app.py\n        ├── requirements.txt\n    ├── Website/\n        ├── index.html\n        ├── script.js\n    ├── Pipfile\n    ├── Pipfile.lock\n```", "```py\n{\n    \"version\": \"2.0\",\n    \"app_name\": \"Capabilities\",\n    \"stages\": {\n        \"dev\": {\n            \"autogen_policy\": false,\n            \"api_gateway_stage\": \"api\"\n        }\n    }\n}\n```", "```py\n{\n    \"Version\": \"2012-10-17\",\n        \"Statement\": [\n        {\n            \"Effect\": \"Allow\",\n            \"Action\": [\n                \"logs:CreateLogGroup\",\n                \"logs:CreateLogStream\",\n                \"logs:PutLogEvents\",\n                \"s3:*\",\n                \"rekognition:*\"\n            ],\n            \"Resource\": \"*\"\n        }\n    ]\n}\n```", "```py\n$ chalice deploy\nCreating deployment package.\nCreating IAM role: Capabilities-dev\nCreating lambda function: Capabilities-dev\nCreating Rest API\nResources deployed:\n - Lambda ARN: arn:aws:lambda:us-east-1:<UID>:function:Capabilities-dev\n - Rest API URL: https://<UID>.execute-api.us-east-1.amazonaws.com/api/\n```", "```py\n$ curl https://<UID>.execute-api.us-east-1.amazonaws.com/api/demo-object-detection\n{\"imageName\":\"beagle_on_gravel.jpg\",\"imageUrl\":\"https://contents.aws.ai.s3.amazonaws.com/beagle_on_gravel.jpg\",\"objects\":[{\"label\":\"Pet\",\"confidence\":98.9777603149414},{\"label\":\"Hound\",\"confidence\":98.9777603149414},{\"label\":\"Canine\",\"confidence\":98.9777603149414},{\"label\":\"Animal\",\"confidence\":98.9777603149414},{\"label\":\"Dog\",\"confidence\":98.9777603149414},{\"label\":\"Mammal\",\"confidence\":98.9777603149414},{\"label\":\"Beagle\",\"confidence\":98.0347900390625},{\"label\":\"Road\",\"confidence\":82.47952270507812},{\"label\":\"Dirt Road\",\"confidence\":74.52912902832031},{\"label\":\"Gravel\",\"confidence\":74.52912902832031}]}\n```", "```py\n\"use strict\";\n\nconst serverUrl = \"https://<UID>.execute-api.us-east-1.amazonaws.com/api\";\n...\n```"]